var express=require("express"),passport=require("passport"),router=express.Router(),LocalStrategy=require("passport-local").Strategy,User=require("../models/user");router.get("/register",function(a,b){b.render("register")});router.get("/login",function(a,b){b.render("login")});
router.post("/register",function(a,b){var c=a.body.name,e=a.body.username,d=a.body.password;a.checkBody("name","Name is required").notEmpty();a.checkBody("username","username is required").notEmpty();a.checkBody("password","Password is required").notEmpty();a.checkBody("password2","Password is required").equals(a.body.password);var f=a.validationErrors();f?b.render("register",{errors:f}):(c=new User({name:c,username:e,password:d}),User.createUser(c,function(a,b){if(a)throw a;console.log(b)}),a.flash("success_msg",
"You are registered and can now log in."),b.redirect("/users/login"))});passport.use(new LocalStrategy(function(a,b,c){User.getUserByUsername(a,function(a,d){if(a)throw a;if(!d)return c(null,!1,{message:"Unknown User"});User.comparePassword(b,d.password,function(a,b){if(a)throw a;return b?c(null,d):c(null,!1,{message:"Invalid Password"})})})}));passport.serializeUser(function(a,b){b(null,a.id)});passport.deserializeUser(function(a,b){User.getUserById(a,function(a,e){b(a,e)})});
router.post("/login",passport.authenticate("local",{successRedirect:"/",failureRedirect:"/users/login",failureFlash:!0}),function(a,b){b.redirect("/")});router.get("/logout",function(a,b){a.logout();a.flash("success_msg","Successfully logged out");b.redirect("/users/login")});module.exports=router;
